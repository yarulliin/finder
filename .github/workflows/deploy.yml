name: Deploy-to-EC2

on:
  push:
    branches: [ "master" ]

env:
  CACHE_NAME: cache-node-modules
  GITHUB_TOKEN: ${{ github.token }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.CACHE_NAME }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Build
        run: npm run build:prod --if-present

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: check dist
        run: |
          pwd
          cd finder
          pwd
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: dist/finder/browser

#      - name: Deploy to AWS EC2
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.DEPLOY_KEY }}
#          port: 22
#          source: "dist/finder"
#          target: ${{ secrets.DEPLOY_PATH }}
#
#      - name: SSH into EC2 instance and restart server
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.DEPLOY_KEY }}
#          port: 22
#          script: |
#            sudo systemctl restart nginx

#    steps:
#      - name: Install AWS CLI
#        run: |
#          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#          unzip awscliv2.zip
#          sudo ./aws/install --update
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        if: |
#          github.event_name == 'push'
#          && github.head_ref == 'refs/heads/master'
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
#          aws-region: ${{ secrets.AWS_REGION }}
#      - name: Deploy to AWS
#        if: ${{ success() }}
#        env:
#          DEPLOYMENT_GROUP: ${{ secrets.AWS_CODEDEPLOY_DEPLOYMENT_GROUP }}
#          DEPLOY_APP_NAME: ${{ secrets.AWS_CODEDEPLOY_APPLICATION_NAME }}
#        run: |
#          aws deploy create-deployment \
#          --deployment-group-name "$DEPLOYMENT_GROUP" \
#          --description="$GITHUB_SHA" \
#          --application-name "$DEPLOY_APP_NAME" \
#          --github-location repository="$GITHUB_REPOSITORY",commitId="$GITHUB_SHA"
